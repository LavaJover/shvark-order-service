syntax = "proto3";

package order;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/LavaJover/shvark-order-service/proto/gen;orderpb";

service OrderService {
    rpc CreateOrder (CreateOrderRequest) returns (CreateOrderResponse);
    rpc ApproveOrder (ApproveOrderRequest) returns (ApproveOrderResponse);
    rpc CancelOrder (CancelOrderRequest) returns (CancelOrderResponse);
    rpc OpenOrderDispute (OpenOrderDisputeRequest) returns (OpenOrderDisputeResponse);
    rpc ResolveOrderDispute (ResolveOrderDisputeRequest) returns (ResolveOrderDisputeResponse);
    rpc GetOrderByID (GetOrderByIDRequest) returns (GetOrderByIDResponse);
    rpc GetOrdersByTraderID (GetOrdersByTraderIDRequest) returns (GetOrdersByTraderIDResponse);
}

message Pagination {
    int64 current_page = 1;
    int64 total_pages = 2;
    int64 total_items = 3;
    int64 items_per_page = 4;
}

message CreateOrderRequest {
    string merchant_id = 1;
    double amount_fiat = 2;
    string currency = 3;
    string country = 4;
    string client_id = 5;
    string payment_system = 6;
    google.protobuf.Timestamp expires_at = 7;
    string merchant_order_id = 8;
    int32 shuffle = 9;
    string callback_url = 10;
}

message CreateOrderResponse {
    Order order = 1;
}

message BankDetail {
    string bank_detail_id = 1;
    string trader_id = 2;
    string currency = 3;
    string country = 4;
    double min_amount = 5;
    double max_amount = 6;
    string bank_name = 7;
    string payment_system = 8;
    bool enabled = 9;
    google.protobuf.Duration delay = 10;
    string owner = 11;
    string card_number = 12;
    string phone = 13;
}

message ApproveOrderRequest {
    string order_id = 1;
}

message ApproveOrderResponse {
    string message = 1;
}

message CancelOrderRequest {
    string order_id = 1;
}

message CancelOrderResponse {
    string message = 1;
}

message GetOrderByIDRequest {
    string order_id = 1;
}

message GetOrderByIDResponse {
    Order order = 1;
}

message Order {
    string order_id = 1;
    string status = 2;

    BankDetail bank_detail = 3;
    double amount_fiat = 4;
    double amount_crypto = 5;
    google.protobuf.Timestamp expires_at = 6;
    string merchant_order_id = 7;
    int32 shuffle = 8;
    string client_id = 9;
    string callback_url = 10;
    double trader_reward_percent = 11;
}

message GetOrdersByTraderIDRequest {
    string trader_id = 1;
    int64 page = 2;
    int64 limit = 3;
    string sort_by = 4;
    string sort_order = 5;
}

message GetOrdersByTraderIDResponse {
    repeated Order orders = 1;
    Pagination pagination = 2;
}

message OpenOrderDisputeRequest {
    string order_id = 1;
}

message OpenOrderDisputeResponse {
    string message = 1;
}

message ResolveOrderDisputeRequest {
    string order_id = 1;
}

message ResolveOrderDisputeResponse {
    string message = 1;
}

service TrafficService {
    rpc AddTraffic (AddTrafficRequest) returns (AddTrafficResponse);
    rpc EditTraffic (EditTrafficRequest) returns (EditTrafficResponse);
    rpc DeleteTraffic (DeleteTrafficRequest) returns (DeleteTrafficResponse);
    rpc GetTrafficRecords (GetTrafficRecordsRequest) returns (GetTrafficRecordsResponse);
    rpc DisableTraderTraffic (DisableTraderTrafficRequest) returns (DisableTraderTrafficResponse);
    rpc EnableTraderTraffic (EnableTraderTrafficRequest) returns (EnableTraderTrafficResponse);
    rpc GetTraderTrafficStatus (GetTraderTrafficStatusRequest) returns (GetTraderTrafficStatusResponse);
}

message AddTrafficRequest {
    string merchant_id = 1;
    string trader_id = 2;
    double trader_reward_percent = 3;
    double trader_priority = 4;
    bool enabled = 5;
}

message Traffic {
    string id = 1;
    string merchant_id = 2;
    string trader_id = 3;
    double trader_reward_percent = 4;
    double trader_priority = 5;
    bool enabled = 6;
}

message AddTrafficResponse {
    string message = 1;
}

message EditTrafficRequest {
    Traffic traffic = 1;
}

message EditTrafficResponse {
    string message = 1;
}

message DeleteTrafficRequest {
    string traffic_id = 1;
}

message DeleteTrafficResponse {
    string message = 1;
}

// Добавить пагинацию!!!
message GetTrafficRecordsRequest {
    int32 page = 1;
    int32 limit = 2; 
}

message GetTrafficRecordsResponse {
    repeated Traffic traffic_records = 1;
}

message DisableTraderTrafficRequest {
    string trader_id = 1;
}

message DisableTraderTrafficResponse {}

message EnableTraderTrafficRequest {
    string trader_id = 1;
}

message EnableTraderTrafficResponse {}

message GetTraderTrafficStatusRequest {
    string trader_id = 1;
}

message GetTraderTrafficStatusResponse {
    bool status = 1;
}